## Holdvars variable generation section.
# This sets variables that are only used to create the holdvars file.
# Note that you must also edit parm/hafs_holdvars.txt in order for the
# values in this section to be sent to the holdvars.txt file.
#
# These variables are set automatically by hafs.launcher.make_holdvars:
# -   cap_run_gsi --- YES/NO from [config] run_gsi
# -   cap_run_vortexinit --- YES/NO from [config] run_vortexinit
# -   holdvars_model --- from [config] run_ocean to 
#                      COUPLED (true) or ATMOS (false)
# They are set in the [holdvars] section.
[holdvars]
COMIN={com}               ;; Input com directory
COMOUT={com}              ;; output com directory
RUN_GSI={cap_run_gsi}     ;; Do we run GSI?
RUN_VORTEXINIT={cap_run_vortexinit} ;; Do we run vortex initialization?
RUN_HRDGRAPHICS={cap_run_hrdgraphics} ;; Do we run HRD graphics?
GSID01={cap_run_gsi}      ;; Do we run GSI for domain 1?
GSID02={cap_run_gsi}      ;; Do we run GSI for domain 2?
GSID03={cap_run_gsi}      ;; Do we run GSI for domain 3?
FGATSTR=-3                ;; FGAT start hour relative to analysis time
FGATINV=3                 ;; FGAT increment in horus
FGATEND=3                 ;; FGAT end hour relative to analysis time
ENVEQUIV={WHERE_AM_I}     ;; Present cluster name
# EXPT={ENV[EXPT]}
# SUBEXPT={ENV[SUBEXPT]}
#JET_NAME={ENV[JET_NAME]}
#WHERE_AM_I={ENV[ENVEQUIV]}

ccpp_suite_regional={forecast/ccpp_suite_regional}
ccpp_suite_glob={forecast/ccpp_suite_glob}
ccpp_suite_nest={forecast/ccpp_suite_nest}

nstf_n1={forecast/nstf_n1}
nstf_n2={forecast/nstf_n2}
nstf_n3={forecast/nstf_n3}
nstf_n4={forecast/nstf_n4}
nstf_n5={forecast/nstf_n5}

CASE={grid/CASE}
LEVS={grid/LEVS}
gtype={grid/gtype}
gridfixdir={grid/gridfixdir}
stretch_fac={grid/stretch_fac}
target_lon={grid/target_lon}
target_lat={grid/target_lat}
refine_ratio={grid/refine_ratio}
istart_nest={grid/istart_nest}
jstart_nest={grid/jstart_nest}
iend_nest={grid/iend_nest}
jend_nest={grid/jend_nest}
halo={grid/halo}
halop1={grid/halop1}
halo0={grid/halo0}

dt_atmos={forecast/dt_atmos}
restart_interval={forecast/restart_interval}
quilting={forecast/quilting}
write_groups={forecast/write_groups}
write_tasks_per_group={forecast/write_tasks_per_group}

glob_layoutx={forecast/glob_layoutx}
glob_layouty={forecast/glob_layouty}
glob_npx={forecast/glob_npx}
glob_npy={forecast/glob_npy}

layoutx={forecast/layoutx}
layouty={forecast/layouty}
npx={forecast/npx}
npy={forecast/npy}
npz={forecast/npz}
 
app_domain={forecast/app_domain}
output_grid={forecast/output_grid}
output_grid_cen_lon={forecast/output_grid_cen_lon}
output_grid_cen_lat={forecast/output_grid_cen_lat}
output_grid_lon1={forecast/output_grid_lon1}
output_grid_lat1={forecast/output_grid_lat1}
output_grid_lon2={forecast/output_grid_lon2}
output_grid_lat2={forecast/output_grid_lat2}
output_grid_dlon={forecast/output_grid_dlon}
output_grid_dlat={forecast/output_grid_dlon}
 
synop_gridspecs={synop_gridspecs}
trker_gridspecs={trker_gridspecs}

cpl_dt={forecast/cpl_dt}
cplflx={forecast/cplflx}
cpl_ocean={forecast/cpl_ocean}
runSeq_OCN2ATM={forecast/runSeq_OCN2ATM}
runSeq_ATM2OCN={forecast/runSeq_ATM2OCN}
runSeq_ATM={forecast/runSeq_ATM}
runSeq_OCN={forecast/runSeq_OCN}
ocean_tasks={forecast/ocean_tasks}
ATM_petlist_bounds={forecast/ATM_petlist_bounds}
MED_petlist_bounds={forecast/MED_petlist_bounds}
OCN_petlist_bounds={forecast/OCN_petlist_bounds}
ocean_start_dtg={forecast/ocean_start_dtg}
merge_import={forecast/merge_import}

domain_atm={forecast/domain_atm}
mesh_atm={forecast/mesh_atm}
